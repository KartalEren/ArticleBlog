@model List<UserDTO>

<div class="container-xxl flex-grow-1 container-p-y">


    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light">USER MANAGEMENT/</span> Users
    </h4>


    <div class="card">
        <div class="table-responsive text-nowrap m-3">

            <a a class="btn btn-success mb-3" asp-area="Admin" asp-controller="User" asp-action="Add">Add New User<i class="bx bx-plus"></i></a> @* Sayfaya GET işlemi yapacaktır *@

            <table class="table table-bordered" id="usersTable" width="100%" cellspacing="0">
                @*  id="articleTables" wwwroot içindeki articleIndex dosyasındaki id ile aynı olmalıdır. JS dosyası ile tablonun içini doldurduk. *@
                <thead>
                    <tr>
                        <th>FirstName</th>
                        <th>LastName</th>
                        <th>Email</th>
                        <th>Phone Number</th>
                        <th>Role</th>
                        <th>EmailConfirmed</th>
                        <th>Access Failed</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>FirstName</th>
                        <th>LastName</th>
                        <th>Email</th>
                        <th>Phone Number</th>
                        <th>Role</th>
                        <th>EmailConfirmed</th>
                        <th>Access Failed</th>
                        <th>Actions</th>
                    </tr>
                </tfoot>
                <tbody class="table-border-bottom-0">

                    @foreach (var user in Model)
                    {
                        <tr name="@user.Id">
                            <td>@user.FirstName</td>
                            <td>@user.LastName</td> @* kategorinin sadece adı lazım olduğu için ArticleDTO da açtığımız CategoryDTO probundan CategoryDTO daki Name probuna gideriz. *@
                            <td>@user.Email</td>
                            <td>@user.PhoneNumber</td>
                            <td>@user.Role</td>
                            <td>@(user.EmailConfirmed ? "Confirmed" : "NotConfirmed")</td>
                            <td>@user.AccessFailedCount</td>
                            <td>
                                <a class="btn btn-primary btn-sm" data-id="@user.Id" asp-area="Admin" asp-controller="User" asp-action="Update" asp-route-Id="@user.Id">@* buradaki yönlendirme ye(asp-route-Id) update controllerdaki parametre adını yazmak gerekir. *@ <i class="bx bxs-edit"></i></a> @* Burası biz güncelleme butonuna basınca Article Controllerdaki Update actionresult ının cshtml (view) sayfasına atması gerekirki orada düzenleme yapalım *@
                                <a class="btn btn-danger btn-sm" data-id="@user.Id" asp-area="Admin" asp-controller="User" asp-action="Delete" asp-route-Id="@user.Id">@* buradaki yönlendirme ye(asp-route-Id) Delete controllerdaki parametre adını yazmak gerekir. *@ <i class="bx bx-minus-circle"></i></a> @* Burası biz sil butonuna basınca Article Controllerdaki Delete actionresult ının cshtml (view) sayfasına atması gerekirki orada silme yapalım *@
                            </td>
                        </tr>
                    }


                </tbody>
            </table>
        </div>
    </div>
    <!--/ Basic Bootstrap Table -->


</div>
@section Scripts{
    <script src="~/js/userIndex.js" type="application/ecmascript"></script>
}  @* ***Bu ifade wwwroot içindeki JS de eklenilen articleIndex dosyasının görmesini sağlar.  *@